// Code generated by mockery v2.49.1. DO NOT EDIT.

//go:build mocks

package model

import (
	model "github.com/chainifynet/aws-encryption-sdk-go/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// MockDecryptionMaterial is an autogenerated mock type for the DecryptionMaterial type
type MockDecryptionMaterial struct {
	mock.Mock
}

type MockDecryptionMaterial_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDecryptionMaterial) EXPECT() *MockDecryptionMaterial_Expecter {
	return &MockDecryptionMaterial_Expecter{mock: &_m.Mock}
}

// DataKey provides a mock function with given fields:
func (_m *MockDecryptionMaterial) DataKey() model.DataKeyI {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DataKey")
	}

	var r0 model.DataKeyI
	if rf, ok := ret.Get(0).(func() model.DataKeyI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.DataKeyI)
		}
	}

	return r0
}

// MockDecryptionMaterial_DataKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DataKey'
type MockDecryptionMaterial_DataKey_Call struct {
	*mock.Call
}

// DataKey is a helper method to define mock.On call
func (_e *MockDecryptionMaterial_Expecter) DataKey() *MockDecryptionMaterial_DataKey_Call {
	return &MockDecryptionMaterial_DataKey_Call{Call: _e.mock.On("DataKey")}
}

func (_c *MockDecryptionMaterial_DataKey_Call) Run(run func()) *MockDecryptionMaterial_DataKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDecryptionMaterial_DataKey_Call) Return(_a0 model.DataKeyI) *MockDecryptionMaterial_DataKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDecryptionMaterial_DataKey_Call) RunAndReturn(run func() model.DataKeyI) *MockDecryptionMaterial_DataKey_Call {
	_c.Call.Return(run)
	return _c
}

// VerificationKey provides a mock function with given fields:
func (_m *MockDecryptionMaterial) VerificationKey() []byte {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VerificationKey")
	}

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// MockDecryptionMaterial_VerificationKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerificationKey'
type MockDecryptionMaterial_VerificationKey_Call struct {
	*mock.Call
}

// VerificationKey is a helper method to define mock.On call
func (_e *MockDecryptionMaterial_Expecter) VerificationKey() *MockDecryptionMaterial_VerificationKey_Call {
	return &MockDecryptionMaterial_VerificationKey_Call{Call: _e.mock.On("VerificationKey")}
}

func (_c *MockDecryptionMaterial_VerificationKey_Call) Run(run func()) *MockDecryptionMaterial_VerificationKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDecryptionMaterial_VerificationKey_Call) Return(_a0 []byte) *MockDecryptionMaterial_VerificationKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDecryptionMaterial_VerificationKey_Call) RunAndReturn(run func() []byte) *MockDecryptionMaterial_VerificationKey_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDecryptionMaterial creates a new instance of MockDecryptionMaterial. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDecryptionMaterial(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDecryptionMaterial {
	mock := &MockDecryptionMaterial{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
